{"version":3,"file":"static/js/970.c9206940.chunk.js","mappings":"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","sources":["api/client.js","api/books.js","components/Notification/Notification.js","hooks/useAxios.js","components/Pagination/styled.js","components/Pagination/Pagination.js","pages/Books/styled.js","pages/Books/Books.js"],"sourcesContent":["import axios from \"axios\";\n\nconst client = axios.create({\n  baseURL: \"https://fakerestapi.azurewebsites.net/api/v1\",\n});\n\nclient.interceptors.response.use(\n  (response) => response.data,\n  (response) => Promise.reject(response.response.data)\n);\n\nexport default client;\n","import client from \"./client\";\n\nexport const getBooks = async () => {\n  try {\n    return await client.get(\"/Books\");\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBookItem = async (bookId) => {\n  try {\n    return await client.get(`/Books/${bookId}`);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import { toast } from \"react-toastify\";\n\nconst Notification = () => {\n  toast.error(\"Error! Bad request!\", {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 3000,\n  });\n  toast.clearWaitingQueue();\n};\nexport default Notification;\n","import { useState, useEffect } from \"react\";\n\nexport default function useAxios(fetchFunc) {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const getData = async () => {\n    try {\n      setLoading(true);\n      const newData = await fetchFunc();\n      setData(newData);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return { data, error, loading };\n}\n","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 60px;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const StyledItem = styled.li`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  &:hover,\n  &.selected {\n    background-color: #ff6b08;\n    color: #ffffff;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  background-color: #ffffff;\n  border: 1px solid #ff6b08;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  pointer-events: none;\n  cursor: not-allowed;\n  opacity: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #ff6b08;\n  }\n  &:not(:disabled) {\n    cursor: pointer;\n    pointer-events: all;\n    opacity: 100%;\n  }\n`;\nexport const StyledIcon = styled.svg`\n  height: 24px;\n  width: 24px;\n  stroke: #ff6b08;\n\n  &:hover {\n    stroke: #ffffff;\n  }\n`;\n","import {\n  StyledContainer,\n  StyledList,\n  StyledItem,\n  StyledButton,\n  StyledIcon,\n} from \"./styled\";\n\nconst Pagination = ({ paginationHandler, dataPerPage, count, pageNumber }) => {\n  const allPages = Math.ceil(count / dataPerPage);\n  const allPagesCount = [...Array(allPages).keys()];\n\n  const onPaginate = (pageNumberSetter) => {\n    paginationHandler(pageNumberSetter);\n  };\n\n  const handlePrevButton = () => {\n    if (1 === pageNumber) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleNextButton = () => {\n    if (allPagesCount.length === pageNumber) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <StyledContainer>\n      <StyledButton\n        disabled={handlePrevButton()}\n        onClick={() => {\n          onPaginate(pageNumber - 1);\n        }}\n      >\n        <StyledIcon\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"btn--icon\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M15 19l-7-7 7-7\"\n          />\n        </StyledIcon>\n      </StyledButton>\n      <StyledList>\n        {allPagesCount.map((number, index) => (\n          <StyledItem\n            key={index}\n            className={number + 1 === pageNumber ? \"selected\" : \"\"}\n            onClick={() => {\n              onPaginate(number + 1);\n            }}\n          >\n            {number + 1}\n          </StyledItem>\n        ))}\n      </StyledList>\n\n      <StyledButton\n        disabled={handleNextButton()}\n        onClick={() => {\n          onPaginate(pageNumber + 1);\n        }}\n      >\n        <StyledIcon\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"btn--icon\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M9 5l7 7-7 7\"\n          />\n        </StyledIcon>\n      </StyledButton>\n    </StyledContainer>\n  );\n};\n\nexport default Pagination;\n","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  width: 1300px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nexport const StyledItem = styled.li`\n  margin-bottom: 30px;\n  max-width: 400px;\n  margin-right: 30px;\n  padding: 20px 24px;\n  border: 1px solid #ececec;\n  &:nth-of-type(3n + 3) {\n    margin-right: 0;\n  }\n  &:nth-last-of-type(-n + 3) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledTitle = styled.h3`\n  margin-bottom: 8px;\n  color: #212121;\n`;\n\nexport const StyledSubtitle = styled.span`\n  color: #212121;\n`;\nexport const StyledText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-block;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.63;\n  letter-spacing: 0.03em;\n  margin-top: 10px;\n  cursor: pointer;\n  color: #212121;\n  background-color: #f5f4fa;\n  padding: 6px 22px;\n  border: 1px solid #ff6b08;\n  border-radius: 4px;\n  min-width: 73px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: #ff6b08;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import moment from \"moment\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getBooks } from \"../../api/books\";\nimport useAxios from \"../../hooks\";\nimport Pagination from \"../../components/Pagination\";\nimport Loader from \"../../components/Loader\";\nimport Notification from \"../../components/Notification\";\nimport {\n  StyledContainer,\n  StyledList,\n  StyledItem,\n  StyledTitle,\n  StyledSubtitle,\n  StyledText,\n  StyledButton,\n} from \"./styled\";\n\nexport default function BooksPage() {\n  const { data, error, loading } = useAxios(getBooks);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 6;\n  const itemsCount = 100;\n\n  const indexOfLastPost = currentPage * itemsPerPage;\n  const indexOfFirstPost = indexOfLastPost - itemsPerPage;\n  const currentBooks = data.slice(indexOfFirstPost, indexOfLastPost);\n\n  return (\n    <StyledContainer>\n      {loading && !data && !error && <Loader />}\n      {!loading && !error && (\n        <StyledList>\n          {currentBooks.map((book) => {\n            return (\n              <StyledItem key={book.id}>\n                <StyledTitle>{book.title}</StyledTitle>\n                <StyledText>\n                  <StyledSubtitle>Description: </StyledSubtitle>\n                  {book.description.slice(0, 200)}...\n                </StyledText>\n                <StyledText>\n                  <StyledSubtitle>Create Date: </StyledSubtitle>\n                  {moment(book.publishDate).format(\"DD.MM.YYYY\")}\n                </StyledText>\n                <Link to={`/books/${book.id}`}>\n                  <StyledButton>View more</StyledButton>\n                </Link>\n              </StyledItem>\n            );\n          })}\n        </StyledList>\n      )}\n\n      {!loading && !error && (\n        <div className=\"pagination-container\">\n          <Pagination\n            dataPerPage={itemsPerPage}\n            count={itemsCount}\n            paginationHandler={setCurrentPage}\n            pageNumber={currentPage}\n          />\n        </div>\n      )}\n      {!loading && error && <Notification />}\n    </StyledContainer>\n  );\n}\n"],"names":["client","axios","baseURL","interceptors","response","use","data","Promise","reject","getBooks","getBookItem","bookId","toast","position","autoClose","useAxios","fetchFunc","useState","setData","error","setError","loading","setLoading","getData","newData","useEffect","StyledContainer","styled","StyledList","StyledItem","StyledButton","StyledIcon","paginationHandler","dataPerPage","count","pageNumber","allPages","Math","ceil","allPagesCount","Array","keys","onPaginate","pageNumberSetter","disabled","onClick","xmlns","class","fill","viewBox","stroke","d","map","number","index","className","length","StyledTitle","StyledSubtitle","StyledText","BooksPage","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentBooks","slice","Loader","book","title","description","moment","publishDate","format","to","id","Notification"],"sourceRoot":""}