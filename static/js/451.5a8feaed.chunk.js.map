{"version":3,"file":"static/js/451.5a8feaed.chunk.js","mappings":"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","sources":["components/Notification/Notification.js","pages/Books/thunks/addBook.js","pages/Books/thunks/deleteBook.js","components/Pagination/selectors/pagination.js","store/modal/selectors/modal.js","pages/Books/selectors/addBook.js","components/Modal/styled.js","components/Modal/Modal.js","pages/Books/components/Form/styled.js","pages/Books/components/Form/Form.js","pages/Books/components/BookAddModal/AddModal.js","pages/Books/selectors/updateBook.js","pages/Books/components/BookEditModal/EditModal.js","pages/Books/selectors/deleteBook.js","pages/Books/components/BookDeleteModal/DeleteModal.js","pages/Books/components/DropdownMenu/DropdownList.js","pages/Books/components/DropdownMenu/styled.js","pages/Books/components/DropdownMenu/DropdownMenu.js","components/Pagination/styled.js","components/Pagination/Pagination.js","pages/Books/selectors/books.js","pages/Books/styled.js","pages/Books/Books.js"],"sourcesContent":["import { toast } from \"react-toastify\";\n\nexport const Notification = () => {\n  toast.error(\"Error! Bad request!\", {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 3000,\n  });\n  toast.clearWaitingQueue();\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { addBook } from \"../../../api/books\";\nimport { booksFetchInStart } from \"./books\";\nimport {\n  bookCreateInProgressAction,\n  bookCreateSuccessAction,\n  bookCreateErrorAction,\n} from \"../reducers/addBook\";\nimport { modalOpenToggleAction } from \"../../../store/modal/reducers/modal\";\n\nconst ADD_BOOK_THUNK = \"ADD_BOOK_THUNK\";\n\nexport const addBookItem = createAsyncThunk(\n  ADD_BOOK_THUNK,\n  async (data, { dispatch }) => {\n    try {\n      dispatch(bookCreateInProgressAction());\n      await addBook(data);\n      dispatch(bookCreateSuccessAction());\n      dispatch(modalOpenToggleAction());\n      await dispatch(booksFetchInStart());\n      toast.success(\"Book is created!\");\n    } catch (error) {\n      dispatch(bookCreateErrorAction(error.data));\n      toast.error(\"Something went wrong\");\n    }\n  }\n);\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport { deleteBook } from \"../../../api/books\";\nimport { booksFetchInStart } from \"./books\";\nimport {\n  bookDeleteSuccessAction,\n  bookDeleteErrorAction,\n  bookDeleteInProgressAction,\n} from \"../reducers/deleteBook\";\n\nimport { modalOpenToggleAction } from \"../../../store/modal/reducers/modal\";\n\nconst BOOK_LIST_DELETE_THUNK_TYPE = \"BOOK_LIST_DELETE_THUNK_TYPE\";\n\nexport const deleteBookItem = createAsyncThunk(\n  BOOK_LIST_DELETE_THUNK_TYPE,\n  async (data, { dispatch }) => {\n    try {\n      dispatch(bookDeleteInProgressAction());\n      await deleteBook(data._id);\n      dispatch(bookDeleteSuccessAction());\n      dispatch(modalOpenToggleAction());\n      await dispatch(booksFetchInStart());\n      toast.success(\"Book is deleted!\");\n    } catch (error) {\n      dispatch(bookDeleteErrorAction(error.data));\n      toast.error(\"Something went wrong\");\n    }\n  }\n);\n","import { createSelector } from \"reselect\";\n\nconst stateSelector = (state) => state;\nconst paginationStateSelector = (state) => state.pagination;\n\nexport const paginationCurrentPageSelector = createSelector(\n  paginationStateSelector,\n  (book) => book.currentPage\n);\n\nexport const paginationItemsPerPageSelector = createSelector(\n  paginationStateSelector,\n  (book) => book.itemsPerPage\n);\n\nexport const booksCurrentBooksSelector = createSelector(\n  stateSelector,\n  ({ pagination, books }) => {\n    const { itemsPerPage, currentPage } = pagination;\n    const indexOfLastBook = itemsPerPage * currentPage;\n    const indexOfFirstBook = indexOfLastBook - itemsPerPage;\n\n    return books.data.slice(indexOfFirstBook, indexOfLastBook);\n  }\n);\n","export const modalStateSelector = (state) => state.modal;\n","import { createSelector } from \"reselect\";\n\nconst addBookStateSelector = (state) => state.addBook;\n\nexport const addBookLoadingSelector = createSelector(\n  addBookStateSelector,\n  (book) => book.loading\n);\n\nexport const addBookDataSelector = createSelector(\n  addBookStateSelector,\n  (book) => book.data\n);\n\nexport const addBookErrorSelector = createSelector(\n  addBookStateSelector,\n  (book) => book.error\n);\n","import styled from \"@emotion/styled\";\nimport { Button } from \"antd\";\n\nexport const StyledConfirmButton = styled(Button)`\n  cursor: pointer;\n  color: #ffffff;\n  background-color: #ff6b08;\n  border: 1px solid #ff6b08;\n  min-width: 73px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #212121;\n    background-color: #f5f4fa;\n    border: 1px solid #ff6b08;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const StyledCancelButton = styled(Button)`\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: #212121;\n    border: 1px solid #ff6b08;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Modal as AntdModal } from \"antd\";\nimport { StyledConfirmButton, StyledCancelButton } from \"./styled\";\n\nexport const Modal = ({ children, onCancel, formName, loading, onSave }) => {\n  const footer = [\n    <StyledCancelButton key=\"cancel\" onClick={onCancel}>\n      Cancel\n    </StyledCancelButton>,\n    <StyledConfirmButton\n      key=\"submit\"\n      type=\"primary\"\n      danger={formName === \"delete\" ? true : false}\n      loading={loading}\n      htmlType=\"submit\"\n      form={formName}\n      onClick={onSave}\n    >\n      Confirm\n    </StyledConfirmButton>,\n  ];\n\n  return (\n    <AntdModal\n      visible={true}\n      onCancel={onCancel}\n      confirmLoading={loading}\n      zIndex={2000}\n      footer={footer}\n    >\n      {children}\n    </AntdModal>\n  );\n};\n\nModal.defaultProps = {\n  onSave: () => {},\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCancel: PropTypes.func,\n  loading: PropTypes.bool,\n  formName: PropTypes.string,\n  onSave: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledError = styled.p`\n  color: red;\n`;\nexport const StyledLabel = styled.label`\n  margin-top: 8px;\n  color: #212121;\n`;\nexport const StyledInput = styled.input`\n  &:focus,\n  &:hover {\n    outline-color: #778899;\n  }\n`;\n\nexport const StyledTextarea = styled.textarea`\n  height: 70px;\n  &:focus,\n  &:hover {\n    outline-color: #778899;\n  }\n`;\n","import { useForm, Controller } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Typography } from \"antd\";\nimport {\n  StyledForm,\n  StyledError,\n  StyledLabel,\n  StyledTextarea,\n  StyledInput,\n} from \"./styled\";\n\nconst schema = yup.object({\n  title: yup.string().required(\"This field is required\"),\n  description: yup.string().required(\"This field is required\"),\n  pageCount: yup\n    .number()\n    .positive(\"Value must be a positive number\")\n    .integer(\"Value must be an integer\")\n    .required(\"This field is required\"),\n});\n\nexport const Form = ({ mode, data, name, onSave }) => {\n  const { Title } = Typography;\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async (values) => {\n    try {\n      if (!data) {\n        onSave(values);\n      } else {\n        onSave({ ...values, id: data._id });\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      {mode === \"create\" && <Title level={3}>Create Book</Title>}\n      {mode === \"update\" && <Title level={3}>Update Book</Title>}\n      <StyledForm onSubmit={handleSubmit(onSubmit)} id={name}>\n        <StyledLabel>Title</StyledLabel>\n        <Controller\n          render={({ field }) => <StyledInput {...field} />}\n          name=\"title\"\n          control={control}\n          defaultValue={data?.title || \"\"}\n        />\n        {errors.title && <StyledError>{errors.title.message}</StyledError>}\n        <StyledLabel>Description</StyledLabel>\n        <Controller\n          render={({ field }) => <StyledTextarea {...field} />}\n          name=\"description\"\n          control={control}\n          defaultValue={data?.description || \"\"}\n        />\n        {errors.description && (\n          <StyledError>{errors.description.message}</StyledError>\n        )}\n\n        <StyledLabel>Pages</StyledLabel>\n        <Controller\n          render={({ field }) => <StyledInput {...field} />}\n          name=\"pageCount\"\n          control={control}\n          defaultValue={data?.pageCount}\n        />\n        {errors.pageCount && (\n          <StyledError>{errors.pageCount.message}</StyledError>\n        )}\n      </StyledForm>\n    </>\n  );\n};\n\nForm.propTypes = {\n  mode: PropTypes.string,\n  data: PropTypes.object,\n  name: PropTypes.string,\n  onSave: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { addBookLoadingSelector } from \"../../selectors/addBook\";\nimport { Modal } from \"../../../../components/Modal/Modal\";\nimport { Form } from \"../Form/Form\";\nimport { Loader } from \"../../../../components/Loader/Loader\";\n\nexport const AddBookModal = ({ onSave, onCancel }) => {\n  const loading = useSelector(addBookLoadingSelector);\n  return (\n    <Modal\n      form=\"create\"\n      onCancel={onCancel}\n      formName=\"create\"\n      loading={loading}\n    >\n      {loading && <Loader />}\n      {!loading && <Form mode=\"create\" onSave={onSave} name=\"create\" />}\n    </Modal>\n  );\n};\n\nAddBookModal.propTypes = {\n  onSave: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n","import { createSelector } from \"reselect\";\n\nconst editBookStateSelector = (state) => state.updateBook;\n\nexport const editBookLoadingSelector = createSelector(\n  editBookStateSelector,\n  (book) => book.loading\n);\n\nexport const editBookDataSelector = createSelector(\n  editBookStateSelector,\n  (book) => book.data\n);\nexport const editBookFetchDataSelector = createSelector(\n  editBookStateSelector,\n  (book) => book.fetchData\n);\n\nexport const editBookErrorSelector = createSelector(\n  editBookStateSelector,\n  (book) => book.error\n);\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  editBookLoadingSelector,\n  editBookDataSelector,\n  editBookFetchDataSelector,\n} from \"../../selectors/updateBook\";\nimport { updateFetchDataStart } from \"../../thunks/updateBook\";\nimport { Modal } from \"../../../../components/Modal/Modal\";\nimport { Form } from \"../Form/Form\";\nimport { Loader } from \"../../../../components/Loader/Loader\";\nimport { Typography } from \"antd\";\n\nexport const UpdateBookModal = ({ onSave, onCancel }) => {\n  const dispatch = useDispatch();\n  const fetchData = useSelector(editBookFetchDataSelector);\n  const data = useSelector(editBookDataSelector);\n  const loading = useSelector(editBookLoadingSelector);\n  const { Text } = Typography;\n\n  useEffect(() => {\n    dispatch(updateFetchDataStart(fetchData));\n  }, []);\n\n  return (\n    <Modal\n      loading={loading}\n      form=\"edit\"\n      onCancel={onCancel}\n      formName=\"edit\"\n      disable={!data}\n    >\n      {loading && <Loader />}\n\n      {!loading && data && (\n        <Form mode=\"update\" onSave={onSave} data={data} name=\"edit\" />\n      )}\n      {!data && <Text type=\"danger\"> Something went wrong</Text>}\n    </Modal>\n  );\n};\n\nUpdateBookModal.propTypes = {\n  onSave: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n","import { createSelector } from \"reselect\";\n\nconst deleteBookStateSelector = (state) => state.deleteBook;\n\nexport const deleteBookLoadingSelector = createSelector(\n  deleteBookStateSelector,\n  (book) => book.loading\n);\n\nexport const deleteBookDataSelector = createSelector(\n  deleteBookStateSelector,\n  (book) => book.data\n);\n\nexport const deleteBookErrorSelector = createSelector(\n  deleteBookStateSelector,\n  (book) => book.error\n);\n","import { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  deleteBookLoadingSelector,\n  deleteBookDataSelector,\n} from \"../../selectors/deleteBook\";\nimport { Modal } from \"../../../../components/Modal/Modal\";\nimport { Loader } from \"../../../../components/Loader/Loader\";\nimport { Space, Typography } from \"antd\";\n\nexport const DeleteBookModal = ({ onSave, onCancel }) => {\n  const loading = useSelector(deleteBookLoadingSelector);\n  const data = useSelector(deleteBookDataSelector);\n\n  const { Title, Text } = Typography;\n\n  return (\n    <Modal\n      loading={loading}\n      onCancel={onCancel}\n      onSave={() => onSave(data)}\n      formName=\"delete\"\n    >\n      {loading && <Loader />}\n      {!loading && (\n        <Space direction=\"vertical\">\n          <Title level={5}>\n            Are you sure that you want to delete{\" \"}\n            <Text underline italic>\n              {data.title}\n            </Text>\n            ?\n          </Title>\n\n          <Text>\n            The item will be deleted immediately. You can not undo this action.\n          </Text>\n        </Space>\n      )}\n    </Modal>\n  );\n};\n\nDeleteBookModal.propTypes = {\n  onSave: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"antd\";\nimport { EditOutlined, DeleteOutlined, ReadOutlined } from \"@ant-design/icons\";\n\nexport const DropdownList = ({ data, onEdit, onDelete, handleMenuClick }) => {\n  const { _id: id } = data;\n  return (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"1\" icon={<ReadOutlined />}>\n        <Link to={`/books/${id}`}>Open</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<EditOutlined />} onClick={() => onEdit(id)}>\n        <span>Edit</span>\n      </Menu.Item>\n      <Menu.Item\n        key=\"3\"\n        icon={<DeleteOutlined />}\n        onClick={() => onDelete(data)}\n      >\n        <span>Delete</span>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nDropdownList.propTypes = {\n  data: PropTypes.object,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  handleMenuClick: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\nimport { MoreOutlined } from \"@ant-design/icons\";\n\nexport const StyledMoreIcon = styled(MoreOutlined)`\n  color: #000000;\n  font-size: 25px;\n  &:hover,\n  &:focus {\n    color: #ff6b08;\n  }\n`;\n","import { useState } from \"react\";\nimport { Dropdown } from \"antd\";\nimport { DropdownList } from \"./DropdownList\";\nimport { StyledMoreIcon } from \"./styled\";\n\nexport const DropdownMenu = (props) => {\n  const [visible, setVisible] = useState(false);\n\n  const handleMenuClick = (event) => {\n    if (event.key === \"3\") {\n      this.setState({ visible: false });\n    }\n  };\n\n  const handleVisibleChange = (flag) => {\n    setVisible(flag);\n  };\n\n  return (\n    <Dropdown\n      overlay={<DropdownList {...props} handleMenuClick={handleMenuClick} />}\n      onVisibleChange={handleVisibleChange}\n      visible={visible}\n      placement=\"top\"\n      arrow\n    >\n      <a>\n        <StyledMoreIcon />\n      </a>\n    </Dropdown>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 60px;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const StyledItem = styled.li`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  cursor: pointer;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  &:hover,\n  &.selected {\n    background-color: #ff6b08;\n    color: #ffffff;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  background-color: #ffffff;\n  border: 1px solid #ff6b08;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  pointer-events: none;\n  cursor: not-allowed;\n  opacity: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #ff6b08;\n  }\n  &:not(:disabled) {\n    cursor: pointer;\n    pointer-events: all;\n    opacity: 100%;\n  }\n`;\nexport const StyledIcon = styled.svg`\n  height: 24px;\n  width: 24px;\n  stroke: #ff6b08;\n\n  &:hover {\n    stroke: #ffffff;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  StyledContainer,\n  StyledList,\n  StyledItem,\n  StyledButton,\n  StyledIcon,\n} from \"./styled\";\n\nexport const Pagination = ({\n  paginationHandler,\n  dataPerPage,\n  count,\n  pageNumber,\n}) => {\n  const allPages = Math.ceil(count / dataPerPage);\n  const allPagesCount = [...Array(allPages).keys()];\n\n  const onPaginate = (pageNumberSetter) => {\n    paginationHandler(pageNumberSetter);\n  };\n\n  return (\n    <StyledContainer>\n      <StyledButton\n        disabled={1 === pageNumber}\n        onClick={() => {\n          onPaginate(pageNumber - 1);\n        }}\n      >\n        <StyledIcon\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M15 19l-7-7 7-7\"\n          />\n        </StyledIcon>\n      </StyledButton>\n      <StyledList>\n        {allPagesCount.map((number, index) => (\n          <StyledItem\n            key={index}\n            className={number + 1 === pageNumber ? \"selected\" : \"\"}\n            onClick={() => {\n              onPaginate(number + 1);\n            }}\n          >\n            {number + 1}\n          </StyledItem>\n        ))}\n      </StyledList>\n\n      <StyledButton\n        disabled={allPagesCount.length === pageNumber}\n        onClick={() => {\n          onPaginate(pageNumber + 1);\n        }}\n      >\n        <StyledIcon\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\n        </StyledIcon>\n      </StyledButton>\n    </StyledContainer>\n  );\n};\n\nPagination.propTypes = {\n  paginationHandler: PropTypes.func,\n  dataPerPage: PropTypes.number,\n  count: PropTypes.number,\n  pageNumber: PropTypes.number,\n};\n","import { createSelector } from \"reselect\";\n\nconst booksStateSelector = (state) => state.books;\n\nexport const booksLoadingSelector = createSelector(\n  booksStateSelector,\n  (books) => books.loading\n);\n\nexport const booksDataSelector = createSelector(\n  booksStateSelector,\n  (books) => books.data\n);\n\nexport const booksErrorSelector = createSelector(\n  booksStateSelector,\n  (books) => books.error\n);\n\n","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  max-width: 1300px;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 15px;\n`;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  width: 400px;\n  height: 250px;\n  margin-right: 30px;\n  padding: 20px 24px;\n  border: 1px solid #ececec;\n  @media (min-width: 768px) and (max-width: 1199px) {\n    &:nth-of-type(2n) {\n      margin-right: 0;\n    }\n    &:nth-last-of-type(2n) {\n      margin-bottom: 0;\n    }\n  }\n  @media (min-width: 1200px) {\n    &:nth-of-type(3n + 3) {\n      margin-right: 0;\n    }\n    &:nth-last-of-type(-n + 3) {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const StyledTitle = styled.h3`\n  font-size: 20px;\n  margin-top: 10px;\n  margin-bottom: 8px;\n  color: #212121;\n`;\n\nexport const StyledSubtitle = styled.span`\n  color: #212121;\n`;\nexport const StyledText = styled.p`\n  margin-bottom: 5px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.63;\n  letter-spacing: 0.03em;\n  margin-top: 10px;\n  cursor: pointer;\n  color: #ffffff;\n  background-color: #ff6b08;\n  padding: 6px 22px;\n  border: 1px solid #ff6b08;\n  border-radius: 4px;\n  min-width: 73px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #212121;\n    background-color: #f5f4fa;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const StyledMoreContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import moment from \"moment\";\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { booksFetchInStart } from \"./thunks/books\";\nimport { addBookItem } from \"./thunks/addBook\";\nimport { updateBookItem } from \"./thunks/updateBook\";\nimport { deleteBookItem } from \"./thunks/deleteBook\";\nimport {\n  paginationCurrentPageSelector,\n  paginationItemsPerPageSelector,\n  booksCurrentBooksSelector,\n} from \"../../components/Pagination/selectors/pagination\";\nimport { paginationChangePage } from \"../../components/Pagination/reducer/pagination\";\nimport { bookUpdateItemIdSetAction } from \"./reducers/updateBook\";\nimport { bookDeleteItemDataSetAction } from \"./reducers/deleteBook\";\nimport { modalStateSelector } from \"../../store/modal/selectors/modal\";\nimport { modalOpenToggleAction } from \"../../store/modal/reducers/modal\";\nimport { AddBookModal } from \"../Books/components/BookAddModal/AddModal\";\nimport { UpdateBookModal } from \"../Books/components/BookEditModal/EditModal\";\nimport { DeleteBookModal } from \"./components/BookDeleteModal/DeleteModal\";\nimport { DropdownMenu } from \"../Books/components/DropdownMenu/DropdownMenu\";\nimport { Pagination } from \"../../components/Pagination/Pagination\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { Notification } from \"../../components/Notification/Notification\";\n\nimport * as selectors from \"./selectors/books\";\n\nimport {\n  StyledContainer,\n  StyledList,\n  StyledItem,\n  StyledTitle,\n  StyledSubtitle,\n  StyledButton,\n  StyledText,\n  StyledMoreContainer,\n} from \"./styled\";\n\nexport default function BooksPage() {\n  const dispatch = useDispatch();\n  const data = useSelector(selectors.booksDataSelector);\n  const loading = useSelector(selectors.booksLoadingSelector);\n  const error = useSelector(selectors.booksErrorSelector);\n  const currentPage = useSelector(paginationCurrentPageSelector);\n  const itemsPerPage = useSelector(paginationItemsPerPageSelector);\n  const pageBooks = useSelector(booksCurrentBooksSelector);\n\n  const { onShow, name } = useSelector(modalStateSelector);\n\n  const handleCreateBook = (values) => {\n    dispatch(addBookItem(values));\n  };\n  const handleUpdateBook = (values) => {\n    dispatch(updateBookItem(values));\n  };\n\n  const handleDeleteBook = (book) => {\n    dispatch(deleteBookItem(book));\n  };\n\n  const handleCreateModalOpenToggle = () => {\n    dispatch(modalOpenToggleAction({ name: \"Create\" }));\n  };\n\n  const handleEditOpenModal = useCallback((id) => {\n    dispatch(bookUpdateItemIdSetAction({ id }));\n    dispatch(modalOpenToggleAction({ name: \"Update\" }));\n  }, []);\n\n  const handleEditModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: \"Update\" }));\n  }, []);\n\n  const handleDeleteModalOpenToggle = useCallback((item) => {\n    dispatch(bookDeleteItemDataSetAction(item));\n    dispatch(modalOpenToggleAction({ name: \"Delete\" }));\n  }, []);\n\n  const handlePaginate = (pageNumber) => {\n    dispatch(paginationChangePage({ page: pageNumber }));\n  };\n\n  useEffect(() => {\n    dispatch(booksFetchInStart());\n  }, [dispatch]);\n\n  return (\n    <StyledContainer>\n      {loading && !data && !error && <Loader />}\n      {!loading && !error && (\n        <>\n          <StyledButton onClick={handleCreateModalOpenToggle}>\n            Create book\n          </StyledButton>\n          <StyledList>\n            {pageBooks.map((book) => {\n              return (\n                <StyledItem key={book._id}>\n                  <StyledMoreContainer>\n                    <StyledTitle>{book.title}</StyledTitle>\n                    <DropdownMenu\n                      data={book}\n                      onEdit={handleEditOpenModal}\n                      onDelete={handleDeleteModalOpenToggle}\n                    />\n                  </StyledMoreContainer>\n                  <StyledText>\n                    <StyledSubtitle>Description: </StyledSubtitle>\n                    {book.description.slice(0, 100)}...\n                  </StyledText>\n                  <StyledText>\n                    <StyledSubtitle>Pages: </StyledSubtitle>\n                    {book.pageCount}\n                  </StyledText>\n                  <StyledText>\n                    <StyledSubtitle>Create Date: </StyledSubtitle>\n                    {moment(book.date).format(\"DD.MM.YYYY\")}\n                  </StyledText>\n                </StyledItem>\n              );\n            })}\n          </StyledList>\n        </>\n      )}\n\n      {!loading && !error && (\n        <Pagination\n          dataPerPage={itemsPerPage}\n          count={data.length}\n          paginationHandler={handlePaginate}\n          pageNumber={currentPage}\n        />\n      )}\n      {onShow && name === \"Create\" && (\n        <AddBookModal\n          onSave={handleCreateBook}\n          onCancel={handleCreateModalOpenToggle}\n        />\n      )}\n      {onShow && name === \"Update\" && (\n        <UpdateBookModal\n          onSave={handleUpdateBook}\n          onCancel={handleEditModalClose}\n        />\n      )}\n      {onShow && name === \"Delete\" && (\n        <DeleteBookModal\n          onSave={handleDeleteBook}\n          onCancel={handleDeleteModalOpenToggle}\n        />\n      )}\n      {!loading && error && <Notification />}\n    </StyledContainer>\n  );\n}\n"],"names":["Notification","toast","position","autoClose","addBookItem","createAsyncThunk","data","dispatch","bookCreateInProgressAction","addBook","bookCreateSuccessAction","modalOpenToggleAction","booksFetchInStart","bookCreateErrorAction","deleteBookItem","bookDeleteInProgressAction","deleteBook","_id","bookDeleteSuccessAction","bookDeleteErrorAction","paginationStateSelector","state","pagination","paginationCurrentPageSelector","createSelector","book","currentPage","paginationItemsPerPageSelector","itemsPerPage","booksCurrentBooksSelector","books","indexOfLastBook","indexOfFirstBook","slice","modalStateSelector","modal","addBookStateSelector","addBookLoadingSelector","loading","error","StyledConfirmButton","styled","Button","StyledCancelButton","Modal","children","onCancel","formName","onSave","footer","onClick","type","danger","htmlType","form","visible","confirmLoading","zIndex","defaultProps","StyledForm","StyledError","StyledLabel","StyledInput","StyledTextarea","schema","yup","title","required","description","pageCount","positive","integer","Form","mode","name","Title","Typography","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","onSubmit","values","id","level","render","field","defaultValue","message","AddBookModal","useSelector","Loader","editBookStateSelector","updateBook","editBookLoadingSelector","editBookDataSelector","editBookFetchDataSelector","fetchData","UpdateBookModal","useDispatch","Text","useEffect","updateFetchDataStart","disable","deleteBookStateSelector","deleteBookLoadingSelector","deleteBookDataSelector","DeleteBookModal","direction","underline","italic","DropdownList","onEdit","onDelete","handleMenuClick","icon","ReadOutlined","to","EditOutlined","DeleteOutlined","StyledMoreIcon","MoreOutlined","DropdownMenu","props","useState","setVisible","overlay","event","key","setState","onVisibleChange","flag","placement","arrow","StyledContainer","StyledList","StyledItem","StyledButton","StyledIcon","Pagination","paginationHandler","dataPerPage","count","pageNumber","allPages","Math","ceil","allPagesCount","Array","keys","onPaginate","pageNumberSetter","disabled","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","d","map","number","index","className","length","booksStateSelector","booksLoadingSelector","booksDataSelector","booksErrorSelector","StyledTitle","StyledSubtitle","StyledText","StyledMoreContainer","BooksPage","selectors","pageBooks","onShow","handleCreateModalOpenToggle","handleEditOpenModal","useCallback","bookUpdateItemIdSetAction","handleEditModalClose","handleDeleteModalOpenToggle","item","bookDeleteItemDataSetAction","moment","date","format","paginationChangePage","page","updateBookItem"],"sourceRoot":""}