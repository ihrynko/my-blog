{"version":3,"file":"static/js/371.4cba8ba0.chunk.js","mappings":"gMAEMA,E,MAASC,GAAAA,OAAa,CAC1BC,QAAS,iDAGXF,EAAOG,aAAaC,SAASC,KAC3B,SAACD,GAAD,OAAcA,EAASE,QACvB,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MAG5B,QCTaG,EAAQ,yCAAG,4GAEPV,EAAAA,IAAW,UAFJ,iGAIbQ,QAAQC,OAAR,OAJa,wDAAH,qDAQRE,EAAW,yCAAG,WAAOC,GAAP,+FAEVZ,EAAAA,IAAA,iBAAqBY,IAFX,iGAIhBJ,QAAQC,OAAR,OAJgB,wDAAH,uD,mECDxB,EAPqB,WACnBI,EAAAA,GAAAA,MAAY,sBAAuB,CACjCC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,MAEbF,EAAAA,GAAAA,sB,8KCLWG,EAAkBC,EAAAA,EAAAA,IAAH,mOASfC,EAAcD,EAAAA,EAAAA,GAAH,0FAMXE,EAAiBF,EAAAA,EAAAA,EAAH,kEAKdG,EAAaH,EAAAA,EAAAA,IAAH,gD,SCTR,SAASI,IACtB,IAAQT,GAAWU,EAAAA,EAAAA,MAAXV,OACR,GAA8BW,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAcqB,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,GAAYC,GACTkB,KACCH,EACAI,YAAW,WACTN,GAAW,KACV,MAEJO,OAAM,SAACzB,GAAD,OAAWqB,EAASrB,QAC5B,CAACK,KAGF,gCACGY,IAAYE,IAASnB,IAAS,SAAC0B,EAAA,EAAD,IAC9BP,IAASnB,IACR,UAACS,EAAD,YACE,SAACE,EAAD,UAAcQ,EAAKQ,SACnB,UAACd,EAAD,YACE,SAACD,EAAD,2BACA,uBAAIO,EAAKS,kBAEX,UAACf,EAAD,YACE,SAACD,EAAD,+BACA,uBAAIO,EAAKU,gBAEX,UAAChB,EAAD,YACE,SAACD,EAAD,uBACA,uBAAIO,EAAKW,cAEX,UAACjB,EAAD,YACE,SAACD,EAAD,kCACA,6BAAKmB,IAAOZ,EAAKa,aAAaC,OAAO,uBAI1CjC,IAAS,SAACkC,EAAA,EAAD","sources":["api/client.js","api/books.js","components/Notification/Notification.js","pages/BooksItemPage/styled.js","pages/BooksItemPage/BooksItemPage.js"],"sourcesContent":["import axios from \"axios\";\n\nconst client = axios.create({\n  baseURL: \"https://fakerestapi.azurewebsites.net/api/v1\",\n});\n\nclient.interceptors.response.use(\n  (response) => response.data,\n  (error) => Promise.reject(error)\n);\n\nexport default client;\n","import client from \"./client\";\n\nexport const getBooks = async () => {\n  try {\n    return await client.get(\"/Books\");\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBookItem = async (bookId) => {\n  try {\n    return await client.get(`/Books/${bookId}`);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import { toast } from \"react-toastify\";\n\nconst Notification = () => {\n  toast.error(\"Error! Bad request!\", {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 3000,\n  });\n  toast.clearWaitingQueue();\n};\nexport default Notification;\n","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  width: 80%;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #cecece;\n  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 12px;\n  color: #212121;\n`;\n\nexport const StyledSubtitle = styled.p`\n  color: #212121;\n  margin-bottom: 5px;\n`;\n\nexport const StyledInfo = styled.div`\n  margin-bottom: 10px;\n`;\n","import moment from \"moment\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getBookItem } from \"../../api/books\";\nimport Notification from \"../../components/Notification\";\nimport Loader from \"../../components/Loader\";\nimport {\n  StyledContainer,\n  StyledTitle,\n  StyledSubtitle,\n  StyledInfo,\n} from \"./styled\";\n\nexport default function BookItemPage() {\n  const { bookId } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [book, setBook] = useState({});\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    getBookItem(bookId)\n      .then(\n        setBook,\n        setTimeout(() => {\n          setLoading(false);\n        }, 2000)\n      )\n      .catch((error) => setError(error));\n  }, [bookId]);\n\n  return (\n    <>\n      {loading && !book && !error && <Loader />}\n      {book && !error && (\n        <StyledContainer>\n          <StyledTitle>{book.title}</StyledTitle>\n          <StyledInfo>\n            <StyledSubtitle>Description</StyledSubtitle>\n            <p>{book.description}</p>\n          </StyledInfo>\n          <StyledInfo>\n            <StyledSubtitle>Number of pages</StyledSubtitle>\n            <p>{book.pageCount}</p>\n          </StyledInfo>\n          <StyledInfo>\n            <StyledSubtitle>Excerpt</StyledSubtitle>\n            <p>{book.excerpt}</p>\n          </StyledInfo>\n          <StyledInfo>\n            <StyledSubtitle>Day of publication</StyledSubtitle>\n            <p> {moment(book.publishDate).format(\"DD.MM.YYYY\")}</p>\n          </StyledInfo>\n        </StyledContainer>\n      )}\n      {error && <Notification />}\n    </>\n  );\n}\n"],"names":["client","axios","baseURL","interceptors","response","use","data","error","Promise","reject","getBooks","getBookItem","bookId","toast","position","autoClose","StyledContainer","styled","StyledTitle","StyledSubtitle","StyledInfo","BookItemPage","useParams","useState","loading","setLoading","book","setBook","setError","useEffect","then","setTimeout","catch","Loader","title","description","pageCount","excerpt","moment","publishDate","format","Notification"],"sourceRoot":""}