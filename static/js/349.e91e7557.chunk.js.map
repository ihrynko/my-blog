{"version":3,"file":"static/js/349.e91e7557.chunk.js","mappings":"gMAEMA,E,MAASC,GAAAA,OAAa,CAC1BC,QAAS,iDAGXF,EAAOG,aAAaC,SAASC,KAC3B,SAACD,GAAD,OAAcA,EAASE,QACvB,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MAG5B,QCTaG,EAAQ,yCAAG,4GAEPV,EAAAA,IAAW,UAFJ,iGAIbQ,QAAQC,OAAR,OAJa,wDAAH,qDAQRE,EAAW,yCAAG,WAAOC,GAAP,+FAEVZ,EAAAA,IAAA,iBAAqBY,IAFX,iGAIhBJ,QAAQC,OAAR,OAJgB,wDAAH,uD,mECDxB,EAPqB,WACnBI,EAAAA,GAAAA,MAAY,sBAAuB,CACjCC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,MAEbF,EAAAA,GAAAA,sB,6JCHa,SAASG,EAAT,GAA6C,IAAlBC,EAAiB,EAAjBA,QAASX,EAAQ,EAARA,KACjD,GACEY,EAAAA,EAAAA,UAAS,CACPD,QAAAA,EACAX,KAAAA,IAHIa,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,kBAAmBC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,KAAMC,EAA9D,EAA8DA,WAK9D,OACE,UAAC,MAAD,kBAAWJ,KAAX,IAA4BK,UAAQ,EAACC,SAAO,EAA5C,WACE,2BACGJ,EAAaK,KAAI,SAACC,GAAD,OAChB,iCAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,GAAD,OACvB,iCAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,yBAKxD,oCAAWZ,KAAX,aACGE,EAAKI,KAAI,SAACO,EAAKC,GAEd,OADAX,EAAWU,IAET,iCAAQA,EAAIE,eAAZ,aACGF,EAAIG,MAAMV,KAAI,SAACW,GACd,OAAO,iCAAQA,EAAKC,gBAAb,aAA8BD,EAAKL,OAAO,2B,eCzBpDO,E,QAAkBC,EAAAA,IAAH,4E,mBCMb,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOnC,EAAP,KAAcwC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRtC,EAAAA,EAAAA,KACGuC,KACCH,EACAI,YAAW,WACTN,GAAW,KACV,MAEJO,OAAM,SAAC5C,GAAD,OAAWwC,EAASxC,QAC5B,IAEH,IAAMU,GAAUmC,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,OACRC,SAAU,SAGZ,CACED,OAAQ,cACRC,SAAU,cACVC,KAAM,qBAAGlB,KAAQmB,MAAoBC,MAAM,EAAG,OAEhD,CACEJ,OAAQ,QACRC,SAAU,aAEZ,CACED,OAAQ,cACRC,SAAU,SAACrB,GAAD,OAASyB,IAAOzB,EAAI0B,aAAaC,OAAO,mBAItD,IAGF,OACE,gCACGjB,IAAYE,EAAMgB,SAAWtD,IAAS,SAACuD,EAAA,EAAD,IACtCjB,EAAMgB,SAAWtD,IAChB,SAACgC,EAAD,WACG,SAACvB,EAAD,CAAiBC,QAASA,EAASX,KAAMuC,MAG7CtC,IAAS,SAACwD,EAAA,EAAD","sources":["api/client.js","api/books.js","components/Notification/Notification.js","pages/StatisticsPage/Table.js","pages/StatisticsPage/styled.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import axios from \"axios\";\n\nconst client = axios.create({\n  baseURL: \"https://fakerestapi.azurewebsites.net/api/v1\",\n});\n\nclient.interceptors.response.use(\n  (response) => response.data,\n  (error) => Promise.reject(error)\n);\n\nexport default client;\n","import client from \"./client\";\n\nexport const getBooks = async () => {\n  try {\n    return await client.get(\"/Books\");\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBookItem = async (bookId) => {\n  try {\n    return await client.get(`/Books/${bookId}`);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n","import { toast } from \"react-toastify\";\n\nconst Notification = () => {\n  toast.error(\"Error! Bad request!\", {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 3000,\n  });\n  toast.clearWaitingQueue();\n};\nexport default Notification;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport { Table } from \"reactstrap\";\n\nexport default function StatisticsTable({ columns, data }) {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data,\n    });\n  return (\n    <Table {...getTableProps()} bordered striped>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const StyledContainer = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding: 20px;\n`;\n","import moment from \"moment\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { getBooks } from \"../../api/books\";\nimport StatisticsTable from \"./Table\";\nimport { StyledContainer } from \"./styled\";\nimport Loader from \"../../components/Loader\";\nimport Notification from \"../../components/Notification\";\n\nexport default function StaticticsPage() {\n  const [loading, setLoading] = useState(true);\n  const [books, setBooks] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    getBooks()\n      .then(\n        setBooks,\n        setTimeout(() => {\n          setLoading(false);\n        }, 2000)\n      )\n      .catch((error) => setError(error));\n  }, []);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"NAME\",\n        accessor: \"title\",\n      },\n\n      {\n        Header: \"DESCRIPTION\",\n        accessor: \"description\",\n        Cell: ({ cell: { value } }) => value.slice(0, 200),\n      },\n      {\n        Header: \"PAGES\",\n        accessor: \"pageCount\",\n      },\n      {\n        Header: \"CREATE DATE\",\n        accessor: (row) => moment(row.publishDate).format(\"DD.MM.YYYY\"),\n      },\n    ],\n\n    []\n  );\n\n  return (\n    <>\n      {loading && !books.length && !error && <Loader />}\n      {books.length && !error && (\n        <StyledContainer>\n          {<StatisticsTable columns={columns} data={books} />}\n        </StyledContainer>\n      )}\n      {error && <Notification />}\n    </>\n  );\n}\n"],"names":["client","axios","baseURL","interceptors","response","use","data","error","Promise","reject","getBooks","getBookItem","bookId","toast","position","autoClose","StatisticsTable","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","bordered","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","StyledContainer","styled","StaticticsPage","useState","loading","setLoading","books","setBooks","setError","useEffect","then","setTimeout","catch","useMemo","Header","accessor","Cell","value","slice","moment","publishDate","format","length","Loader","Notification"],"sourceRoot":""}